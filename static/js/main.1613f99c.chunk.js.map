{"version":3,"sources":["Components/Form.js","Components/Navbar.js","Components/Extra.js","App.js","reportWebVitals.js","index.js"],"names":["Form","props","_useState","useState","_useState2","Object","slicedToArray","text","setText","react_default","a","createElement","Fragment","er","className","id","value","onChange","event","target","cols","rows","onClick","newText","toUpperCase","console","log","Navbar","react_router_dom","to","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","aria-current","Extra","color","backgroundColor","boi","setstyle","_useState3","_useState4","Text","style","aria-labelledby","data-bs-parent","App","react_router","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.1613f99c.chunk.js","sourcesContent":["import React ,{useState} from 'react'\r\n\r\n\r\nexport default function Form(props) {\r\n  const upClick = ()=>\r\n  {\r\n    let newText =text.toUpperCase();\r\n    setText(newText);\r\n  }\r\n\r\n  const handleOnChange = (event)=>\r\n  {\r\n    setText(event.target.value);\r\n  }\r\n  \r\n  const clearSec =()=>\r\n  {\r\n    console.log( text);\r\n    setText('');\r\n  }\r\n\r\n  const [text,setText] =useState(\"\");\r\n  return (\r\n    <>\r\n    <h1>{props.er}</h1>\r\n    <div>\r\n    <textarea className=\"form-control\" id=\"my\" value={text} onChange={handleOnChange} cols='50' rows=\"10\"></textarea>\r\n    </div>\r\n    <button className='btn btn-primary mx-1' onClick={upClick}>Uppercase </button>\r\n    <button className='btn btn-danger' onClick={clearSec}>Clear</button> \r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n  <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n  <div className=\"container-fluid\">\r\n    <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"/navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/\">Form</Link>\r\n        </li>\r\n      <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n        </li>\r\n      </ul>\r\n\r\n    </div>\r\n  </div>\r\n</nav>\r\n</>\r\n  )\r\n}\r\n","import React ,{useState} from 'react'\r\n\r\nexport default function Extra(props) {\r\n\r\n    const[boi,setstyle] =useState({\r\n      color: 'black',\r\n      backgroundColor: 'white'\r\n    });\r\n\r\n    const[Text,setText] =useState(\"Dark Mode\");\r\n\r\n    const zingat =()=>\r\n    {\r\n      if(boi.color==='black')\r\n      {\r\n        setstyle({\r\n          color: 'white',\r\n          backgroundColor: 'black'\r\n        })\r\n\r\n        setText(\"Light Mode\");\r\n      }\r\n      else\r\n      {\r\n        setstyle({\r\n          color: 'black',\r\n          backgroundColor: 'white'\r\n        })\r\n\r\n        setText(\"Dark Mode\");\r\n      }\r\n      \r\n    }\r\n\r\n    return (\r\n      <>\r\n     <div className='container' style={boi}>\r\n     <h1 className='my-4 ' >{props.title}</h1>\r\n    <div className=\"accordion\" id=\"accordionExample\" style={boi}>\r\n  <div className=\"accordion-item\" style={boi}>\r\n    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n      <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" style={boi} aria-controls=\"collapseOne\">\r\n        Accordion Item #1\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseOne\"style={boi}  className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\" style={boi}>\r\n        <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\" style={boi}>\r\n    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n      <button style={boi} className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n        Accordion Item #2\r\n      </button>\r\n    </h2>\r\n    <div style={boi} id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n      <div style={boi} className=\"accordion-body\">\r\n        <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div style={boi} className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n      <button style={boi} className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n        Accordion Item #3\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\">\r\n        <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n</div>\r\n\r\n<div className='container' style={boi}>\r\n<button type='button ' className='btn btn-primary my-2' onClick={zingat}>{Text}</button>\r\n</div>\r\n</>\r\n  )\r\n}\r\n","import './App.css';\nimport React from 'react';\nimport Form from './Components/Form';\nimport Navbar from './Components/Navbar';\nimport Extra from './Components/Extra';\nimport\n{\n  BrowserRouter as Router,\n  Routes,\n  Route\n} from \"react-router-dom\";\n\n\n\nfunction App() {\nreturn(\n  <>\n  <Router>\n  <Navbar title=\"Doja\"/>\n  <div className='container my-3'> \n     <Routes>\n      <Route path='/about' element={<Extra title=\"About Us\"/>}/>\n      <Route path='/' element={ <Form er=\"Form\"/> }/>\n     </Routes>\n  </div>\n  </Router> \n  \n  </>\n);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}